name: ðŸš€ Release & Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
    
    - name: Run tests
      run: pytest tests/ -v

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      id-token: write  # For trusted publishing

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for proper changelog

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine check-manifest

    - name: Verify package structure
      run: |
        check-manifest
        python setup.py check --metadata --strict

    - name: Build package
      run: python -m build

    - name: Verify build
      run: |
        twine check dist/*
        pip install dist/*.whl
        python -c "import shedboxai; print(f'Successfully imported shedboxai v{shedboxai.__version__}')"

    - name: Create GitHub Release
      run: |
        gh release create ${{ github.ref_name }} \
          --title "Release ${{ github.ref_name }}" \
          --generate-notes \
          dist/*.tar.gz \
          dist/*.whl
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to PyPI
      run: |
        twine upload dist/* --verbose
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
